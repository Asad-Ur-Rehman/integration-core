pipeline {
  agent {
    label "automation"
  }
  options {
    skipDefaultCheckout()
  }
  environment {
    gitAuthor = ""
  }
  triggers {
    pollSCM('*/5 * * * *')
  }

  stages {
    stage ("checkout") {
      steps {
        dir("integration-core") {
          checkout([$class: 'GitSCM', branches: [[name: env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'UserExclusion', excludedUsers: 'jenkins@signalvine.com'], [$class: 'LocalBranch', localBranch: env.BRANCH_NAME]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '96261e0c-0182-4871-9245-633f7d3ab357', url: 'git@github.com:signalvine/integration-core.git']]])
	  script {
	    gitAuthor = sh (script: 'git show --format="%aE" HEAD | head -n1', returnStdout: true).trim()
	  }
        }
      }
      post {
        failure {
          slackSend channel: '10pearls', color: 'danger', message: "integration-core checkout failed on ${env.BRANCH_NAME} (<${env.BUILD_URL}|Open>)"
        }
      }
    }

    stage ("test") {
      when { expression { gitAuthor != 'jenkins@signalvine.com' } }
      steps {
        withCredentials([usernamePassword(credentialsId: '834d8d90-f1fa-4610-8499-c0eadf743be2', passwordVariable: 'NEXUS_REPO_PASSWORD', usernameVariable: 'NEXUS_REPO_USER')]) {
        sh '''#!/bin/bash
	  set -e
	  set -x
	  
          export INTEGRATION_DB_HOST=127.0.0.1
          export INTEGRATION_DB_PORT=5432
	  export INTEGRATION_DB_NAME=test
          export INTEGRATION_DB_USER=signalvine
          export INTEGRATION_DB_PASSWORD=signalvine
	  cd ./integration-core/ci/
	  ./unit.sh
	'''
	}
      }
      post {
        failure {
          slackSend channel: '10pearls', color: 'danger', message: "integration-core unit tests failed on ${env.BRANCH_NAME} (<${env.BUILD_URL}|Open>)"
        }
      }
    }

    stage ("build") {
      when { expression { gitAuthor != 'jenkins@signalvine.com' } }
      steps {
        sshagent(['63730a8e-8555-4018-8a30-6163e5d6c8e8']) {
	  withCredentials([usernamePassword(credentialsId: '834d8d90-f1fa-4610-8499-c0eadf743be2', passwordVariable: 'NEXUS_REPO_PASSWORD', usernameVariable: 'NEXUS_REPO_USER')]) {
		  sh script:'''#!/bin/bash
		    set -e
		    set -x
		  
		    cd integration-core
		    
		    rm -rf /target/*/*.jar
		    if [ "$BRANCH_NAME" = 'master' ]; then
		      git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
		      git config branch.$BRANCH_NAME.remote origin
		      git config branch.$BRANCH_NAME.merge refs/heads/$BRANCH_NAME
		      git config --global user.name "Jenkins"
		      git config --global user.email "jenkins@signalvine.com"
                      sbt "release with-defaults skip-tests" -Dfinal=true
		    else
		      sbt package
		    fi
		  ''', returnStdout: true
	  }
        }
      }
      post {
        success {
	  archiveArtifacts 'integration-core/target/scala*/*.jar'
	}
	failure {
	  slackSend channel: '10pearls', color: 'danger', message: "*integration-core build/publish failed on ${env.BRANCH_NAME} (<${env.BUILD_URL}|Open>)*"
	}
      }
    }
  }
  post {
    failure {
      slackSend channel: 'notifications', color: 'danger', message: 'integration-core build or publish failed'
    }

    success {
      slackSend channel: 'notifications', color: 'good', message: 'integration-core successfully built and published'
    }
  }
}
