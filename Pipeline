pipeline {
  agent {
    label "automation"
  }
  options {
    skipDefaultCheckout()
  }
  triggers {
    pollSCM('*/5 * * * *')
  }

  stages {
    stage ("checkout") {
      steps {
        dir("integration-provider-factory") {
          checkout([$class: 'GitSCM', branches: [[name: env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: env.BRANCH_NAME]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '96261e0c-0182-4871-9245-633f7d3ab357', url: 'git@github.com:signalvine/integration-provider-factory.git']]])
        }
      }
    }

    stage ("test") {
      steps {
        sh './integration-provider-factory/ci/unit.sh'
      }
      post {
        failure {
          slackSend channel: '10pearls', color: 'danger', message: "integration-provider-factory unit tests failed on master (<${env.BUILD_URL}|Open>)"
        }
      }
    }

    stage ("build") {
      steps {
        sshagent(['63730a8e-8555-4018-8a30-6163e5d6c8e8']) {
          sh '''	
	    cd integration-provider-factory
	    git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
            git config branch.$BRANCH_NAME.remote origin
            git config branch.$BRANCH_NAME.merge refs/heads/$BRANCH_NAME
            rm -rf /target/*/*.jar
            if [ "$BRANCH_NAME" = "OPS-599" ]; then
              sbt "release with-defaults" -Dfinal=true
            else
              sbt "release with-defaults"
            fi
          '''
        }
      }
      post {
        success {
	  archiveArtifacts 'integration-provider-factory/target/scala*/*.jar'
	}
        failure {
          slackSend channel: '10pearls', color: 'danger', message: "integration-provider-factory build failed (<${env.BUILD_URL}|Open>)"
        }
      }
    }
  }
  post {
    failure {
      slackSend channel: 'notifications', color: 'danger', message: 'integration-provider-factory build or publish failed'
    }

    success {
      slackSend channel: 'notifications', color: 'good', message: 'integration-provider-factory successfully built and published'
    }
  }
}
